from fabric.api import *
from fabric.contrib.console import *
from fabric.contrib.files import *
from fabric.colors import *

@roles('testserver')
def U():
    run('uname -a')


@roles('server')
def run_buildout():
    env.user = '${config:app_user}'
    username = '${config:app_user}'
    projectname = '${config:projectname}'
    git_url = '${config:git-url}'

    with cd('/home/{user}/sites/{project}'.format(user=username, project=projectname)):
        run('git clone {git_url} buildout'.format(git_url=git_url))
#        run('source bin/activate')

@roles('server')
def build_production():
    env.user = '${config:app_user}'
    username = '${config:app_user}'
    projectname = '${config:projectname}'
     
    with cd('/home/{user}/sites/{project}/buildout'.format(user=username, project=projectname)):
        run('source ../bin/activate')
        run('touch buildout.cfg')
        run('echo "[buildout]" >> buildout.cfg')
        run('echo "extends = config/production.cfg" >> buildout.cfg')
        run('python bootstrap.py')
        run('./bin/buildout -vvv')

@roles('server')
def start_production():
    env.user = '${config:app_user}'
    username = '${config:app_user}'
    projectname = '${config:projectname}'

    with cd('/home/{user}/sites/{project}/buildout'.format(user=username, project=projectname)
       run('./bin/supervisord') 


@roles('server')
def stop_production():
    env.user = '${config:app_user}'
    projectname = '${config:projectname}'
    
    with cd('/home/{user}/sites/{project}/buildout'.format(user=username, project=projectname))
        run('./bin/supervisorctl shutdown all')

@roles('server')
def update_production():
    env.user = '${config:app_user}'
    projectname = '${config:projectname}'

    with cd('/home/{user}/sites/{project}/buildout'.format(user=username, project=projectname))
        run('nice git pull --rebase')
        run('./bin/buildout -Nvvv')
